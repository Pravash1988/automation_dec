<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="253719" started-at="2023-02-25T11:29:24 IST" finished-at="2023-02-25T11:33:38 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="253719" started-at="2023-02-25T11:29:24 IST" finished-at="2023-02-25T11:33:38 IST">
      <class name="testCase.LoginTest">
        <test-method status="PASS" signature="beforetest()[pri:0, instance:testCase.LoginTest@6321e813]" name="beforetest" is-config="true" duration-ms="28" started-at="2023-02-25T11:29:24 IST" finished-at="2023-02-25T11:29:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="beforemethod" is-config="true" duration-ms="27789" started-at="2023-02-25T11:29:24 IST" finished-at="2023-02-25T11:29:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.InvalidLogin()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="InvalidLogin()[pri:0, instance:testCase.LoginTest@6321e813]" name="InvalidLogin" duration-ms="3843" started-at="2023-02-25T11:29:52 IST" finished-at="2023-02-25T11:29:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-25T11:29:56 IST" finished-at="2023-02-25T11:29:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidLogin status=SUCCESS method=LoginTest.InvalidLogin()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="beforemethod" is-config="true" duration-ms="28892" started-at="2023-02-25T11:29:56 IST" finished-at="2023-02-25T11:30:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.loginTest()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="loginTest()[pri:0, instance:testCase.LoginTest@6321e813]" name="loginTest" duration-ms="3572" started-at="2023-02-25T11:30:25 IST" finished-at="2023-02-25T11:30:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="afterMethod" is-config="true" duration-ms="1" started-at="2023-02-25T11:30:28 IST" finished-at="2023-02-25T11:30:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=LoginTest.loginTest()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="beforemethod" is-config="true" duration-ms="117257" started-at="2023-02-25T11:30:28 IST" finished-at="2023-02-25T11:32:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.redirectToResetPasswordPageLinkPresent()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="redirectToResetPasswordPageLinkPresent()[pri:0, instance:testCase.LoginTest@6321e813]" name="redirectToResetPasswordPageLinkPresent" duration-ms="29" started-at="2023-02-25T11:32:26 IST" finished-at="2023-02-25T11:32:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectToResetPasswordPageLinkPresent -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-25T11:32:26 IST" finished-at="2023-02-25T11:32:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectToResetPasswordPageLinkPresent status=SUCCESS method=LoginTest.redirectToResetPasswordPageLinkPresent()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="beforemethod" is-config="true" duration-ms="30120" started-at="2023-02-25T11:32:26 IST" finished-at="2023-02-25T11:32:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.navigateResetPasswordPage()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="navigateResetPasswordPage()[pri:0, instance:testCase.LoginTest@6321e813]" name="navigateResetPasswordPage" duration-ms="3133" started-at="2023-02-25T11:32:56 IST" depends-on-methods="testCase.LoginTest.redirectToResetPasswordPageLinkPresent" finished-at="2023-02-25T11:32:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateResetPasswordPage -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-02-25T11:32:59 IST" finished-at="2023-02-25T11:32:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateResetPasswordPage status=SUCCESS method=LoginTest.navigateResetPasswordPage()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="beforemethod" is-config="true" duration-ms="27528" started-at="2023-02-25T11:32:59 IST" finished-at="2023-02-25T11:33:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=LoginTest.cancelButton()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="cancelButton()[pri:0, instance:testCase.LoginTest@6321e813]" name="cancelButton" duration-ms="10371" started-at="2023-02-25T11:33:26 IST" depends-on-methods="testCase.LoginTest.navigateResetPasswordPage" finished-at="2023-02-25T11:33:37 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.className: orangehrm-forgot-password-button--cancel (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.className: orangehrm-forgot-password-button--cancel (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at testCase.LoginTest.cancelButton(LoginTest.java:130)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".orangehrm\-forgot\-password\-button\-\-cancel"}
  (Session info: chrome=110.0.5481.105)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'PRAVASH', ip: '192.168.43.106', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.105, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Users\PRAVAS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:61409}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 74a163ea7e5f8b506bac235e2b41d8cd
*** Element info: {Using=class name, value=orangehrm-forgot-password-button--cancel}
at sun.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:412)
at org.openqa.selenium.By$ByClassName.findElement(By.java:389)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at com.sun.proxy.$Proxy6.findElement(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cancelButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCase.LoginTest@6321e813]" name="afterMethod" is-config="true" duration-ms="1100" started-at="2023-02-25T11:33:37 IST" finished-at="2023-02-25T11:33:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cancelButton status=FAILURE method=LoginTest.cancelButton()[pri:0, instance:testCase.LoginTest@6321e813] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCase.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
